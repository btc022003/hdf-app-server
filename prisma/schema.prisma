// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PgSQL_URL")
}

model User {
  id             String          @id @default(uuid())
  userName       String          @unique @map("user_name")
  password       String
  avatar         String          @default("")
  nickName       String          @map("nick_name")
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  address        String          @default("")
  mobile         String          @default("")
  doctorComments DoctorComment[] // 对医生的评价
  consultations  Consultation[] // 向医生提出的咨询

  @@map("users")
}

// 找医生部分
model Doctor {
  id        String   @id @default(uuid())
  name      String   @default("")
  desc      String   @default("")
  tags      String   @default("")
  content   String   @default("")
  avatar    String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  // 建立关联的模型中使用到的名字
  //  fields 当前表中的字段
  //  references 关联表中的字段
  //  通过设置关联字段为可选，可以在关联数据为空时查询不报错

  departmentInfo  Department?     @relation(fields: [departmentId], references: [id])
  departmentId    String?         @map("department_id")
  doctorTitleInfo DoctorTitle?    @relation(fields: [doctorTitleId], references: [id])
  doctorTitleId   String?         @map("doctor_title_id")
  doctorComments  DoctorComment[] // 都当前医生的评价
  // 医生所属医院
  hospitalInfo    Hospital?       @relation(fields: [hospitalId], references: [id])
  hospitalId      String?

  consultations Consultation[]
  @@map("doctors")
}

model Department {
  id        String   @id @default(uuid())
  name      String   @default("")
  desc      String   @default("")
  content   String   @default("")
  image     String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  doctors   Doctor[]

  @@map("departments")
}

model DoctorTitle {
  id        String   @id @default(uuid())
  name      String   @default("")
  desc      String   @default("")
  image     String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  doctors Doctor[]
  @@map("doctor_titls")
}

// 医生标签关键词(擅长的疾病)，主要用于录入医生标签信息的时候作为参考。
model DoctorTag {
  id        String   @id @default(uuid())
  name      String   @default("")
  desc      String   @default("")
  image     String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("doctor_tags")
}

// 医生的评价
model DoctorComment {
  id         String   @id @default(uuid())
  level      Float    @default(5) // 评分
  content    String   @default("")
  image      String   @default("")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  userInfo   User?    @relation(fields: [userId], references: [id])
  userId     String?  @map("user_id")
  doctorInfo Doctor?  @relation(fields: [doctorId], references: [id])
  doctorId   String?  @map("doctor_id")

  @@map("doctor_comments")
}

model Hospital {
  id        String   @id @default(uuid())
  name      String   @default("")
  desc      String   @default("")
  image     String   @default("")
  content   String   @default("")
  address   String   @default("")
  phone     String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  doctors   Doctor[]

  @@map("hospitals")
}

// 向医生咨询
model Consultation {
  id      String  @id @default(uuid())
  content String  @default("") // 咨询的内容
  reply   String  @default("") // 回复
  isPayed Boolean @default(false) @map("is_payed") // 是否支付
  isReply Boolean @default(false) @map("is_replay") // 是否回复
  user    User    @relation(fields: [userId], references: [id])
  doctor  Doctor  @relation(fields: [doctorId], references: [id])

  userId   String
  doctorId String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("consultations")
}

// 药品分类
model MedicineCategory {
  id        String   @id @default(uuid())
  name      String   @default("")
  desc      String   @default("")
  image     String   @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Medicine Medicine[]

  @@map("medicine_categories")
}

// 药品信息
model Medicine {
  id                 String            @id @default(uuid())
  name               String            @default("")
  desc               String            @default("")
  tags               String            @default("") // 主治的症状标签，多个用,分割
  image              String            @default("")
  content            String            @default("")
  isStanding         Boolean           @default(false) @map("is_standing") // 是否常备药品
  createdAt          DateTime          @default(now()) @map("created_at")
  updatedAt          DateTime          @updatedAt @map("updated_at")
  category           MedicineCategory? @relation(fields: [medicineCategoryId], references: [id])
  medicineCategoryId String?           @default("") @map("medicine_category_id")

  @@map("medicines")
}
